from typing import Any

class Image3U8:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ImageF32:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ImageU64:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ImageU8:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ManagedImage3U8:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ManagedImageF32:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ManagedImageU64:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

class ManagedImageU8:
    def __init__(self) -> None: ...
    def at(self, x, y, channel) -> Any: ...
    def get_height(self) -> int: ...
    def get_width(self) -> int: ...
    def to_numpy_array(self, *args, **kwargs) -> Any: ...

def debayer(*args, **kwargs) -> Any: ...
