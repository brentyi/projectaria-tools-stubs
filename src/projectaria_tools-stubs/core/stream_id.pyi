from typing import ClassVar, overload

BAROMETER_RECORDABLE_CLASS: RecordableTypeId
BLUETOOTH_BEACON_RECORDABLE_CLASS: RecordableTypeId
EYE_CAMERA_RECORDABLE_CLASS: RecordableTypeId
GPS_RECORDABLE_CLASS: RecordableTypeId
IMU_RECORDABLE_CLASS: RecordableTypeId
RGB_CAMERA_RECORDABLE_CLASS: RecordableTypeId
SLAM_CAMERA_DATA: RecordableTypeId
SLAM_IMU_DATA: RecordableTypeId
SLAM_MAGNETOMETER_DATA: RecordableTypeId
STEREO_AUDIO_RECORDABLE_CLASS: RecordableTypeId
TIME_RECORDABLE_CLASS: RecordableTypeId
WIFI_BEACON_RECORDABLE_CLASS: RecordableTypeId

class RecordableTypeId:
    __members__: ClassVar[dict] = ...  # read-only
    BAROMETER_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    BLUETOOTH_BEACON_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    EYE_CAMERA_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    GPS_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    IMU_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    RGB_CAMERA_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    SLAM_CAMERA_DATA: ClassVar[RecordableTypeId] = ...
    SLAM_IMU_DATA: ClassVar[RecordableTypeId] = ...
    SLAM_MAGNETOMETER_DATA: ClassVar[RecordableTypeId] = ...
    STEREO_AUDIO_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    TIME_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    WIFI_BEACON_RECORDABLE_CLASS: ClassVar[RecordableTypeId] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    def __setstate__(self, state: int) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class StreamId:
    __hash__: ClassVar[None] = ...
    @overload
    def __init__(self, arg0: int, arg1: int) -> None: ...
    @overload
    def __init__(self, arg0: str) -> None: ...
    def get_instance_id(self) -> int: ...
    def get_name(self) -> str: ...
    def get_type_id(self) -> RecordableTypeId: ...
    def get_type_name(self) -> str: ...
    def is_valid(self) -> bool: ...
    def __eq__(self, arg0: StreamId) -> bool: ...
